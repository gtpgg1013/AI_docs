str5<-paste(str4,collapse=",") #하나의 단어로 합칠 때 사용
paste(str5,sep = "3")
paste(str5,sep=".")
paste(month.abb, nth, sep = ": ", collapse = "; ")
(nth <- paste0(1:12, c("st", "nd", "rd", rep("th", 9))))
(nth <- paste0(1:12, c("st", "nd", "rd", rep("th", 9))))
paste(month.abb, nth, sep = ": ", collapse = "; ")
#패키지 사용법 : pakages.install -> library
install.packages
#패키지 사용법 : pakages.install -> library
install.packages("ggplot2")
library("ggplot2")
x<-c("a","a","b","c")
x
qplot(x)
mpg
qplot(mpg)
mpg
str(mpg) #구조를 확인하는 함수수
qplot(mpg.model)
qplot(mpg$model)
qplot(mpg$manufacturer)
qplot(mpg$cty) # $는 컬럼참조
qplot(mpg$trans) # $는 컬럼참조
qplot(data = mpg,x = year)
qplot(data = mpg,x = drv,y = hwy)
# EDA : 탐색적 분석 방법 : 데이터를 보면서 분석해나간다
qplot(data = mpg,x = drv,y = hwy,geom = "line")
# EDA : 탐색적 분석 방법 : 데이터를 보면서 분석해나간다
qplot(data = mpg,x = drv,y = hwy,geom = "histogram")
# EDA : 탐색적 분석 방법 : 데이터를 보면서 분석해나간다
qplot(data = mpg,x = drv,y = hwy,geom = "line")
qplot(data = mpg,x = drv,y = hwy,geom = "boxplot")
#통계의 이상치를 파악할 때 쉽게 파악할 수 있게 하는 그래프 : boxplot
#25%씩 나눠짐 : IQR = Q3-Q1 / IQR*1.5만큼 박스에서 벗어나면 outlier다
#박스 플롯을 봤을 때 점 찍혀있는애들 : outlier
#이상치 : outliner
qplot(data = mpg,x = drv,y = hwy,geom = "boxplot",colours = drv)
#통계의 이상치를 파악할 때 쉽게 파악할 수 있게 하는 그래프 : boxplot
#25%씩 나눠짐 : IQR = Q3-Q1 / IQR*1.5만큼 박스에서 벗어나면 outlier다
#박스 플롯을 봤을 때 점 찍혀있는애들 : outlier
#이상치 : outliner
qplot(data = mpg,x = drv,y = hwy,geom = "boxplot",colour = drv)
#1. 3명 점수 (80,90,50)을 저장 : 변수 3개로
a<-80
b<-90
scores<-c(a,b,c)
min(scores)
scores
#1. 3명 점수 (80,90,50)을 저장 : 변수 3개로
sa<-80
sb<-90
sc<-50
scores<-c(sa,sb,sc)
scores
min(scores)
mean(scores)
#1. 3명 점수 (80,90,50)을 저장 : 변수 3개로
str(c)
#2. 평균점수 출력
min(scores)
#데이터프레임 : 엑셀의 시트(행(관측치): 한사람의 정보 / 열: 속성)
eng<-c(90.100,70,60)
math<-c(50,60,100,9)
class(eng)
df<-data.frame(eng)
df
class(df)
df<-data.frame(eng,math) #eng 벡터, 열이 1개인 표 만듬
df
class(df)
df<-data.frame(eng,math) #eng 벡터, 열이 1개인 표 만듬
#데이터프레임 : 엑셀의 시트(행(관측치): 한사람의 정보 / 열: 속성)
eng<-c(90,100,70,60)
math<-c(50,60,100,9)
df<-data.frame(eng,math) #eng 벡터, 열이 1개인 표 만듬
df
class(df)
str(df2)
df2<-data.frame(eng,math) #eng 벡터, 열이 1개인 표 만듬
df2
class(df2)
str(df2)
df<-data.frame(eng) #eng 벡터, 열이 1개인 표 만듬
df
class(df)
df2<-data.frame(eng,math) #eng 벡터, 열이 1개인 표 만듬
df2
class(df2)
str(df2)
class<-c(1,1,2,3)
df3<-data.frame(eng,math,class)
df3
#eng의 평균출력
mean(df3$eng)
df4<-data.frame(eng<-c(90,100,70,60),
math<-c(50,60,100,9),
class<-c(1,1,2,3))
dr4
df4
df4<-data.frame(eng=c(90,100,70,60),
math=c(50,60,100,9),
class=c(1,1,2,3))
df4
#과일 df만들기
fruits<-data.frame(가격=(1000,2000,500),
판매수량=(20,10,5))
#과일 df만들기
fruits<-data.frame(가격=c(1000,2000,500),
판매수량=c(20,10,5))
fruits
#과일 df만들기
fruits<-data.frame(가격=c(1000,2000,500),
판매수량=c(20,10,5),row.names=c(포도,사과,배))
#과일 df만들기
fruits<-data.frame(가격=c(1000,2000,500),
판매수량=c(20,10,5),row.name=c(포도,사과,배))
#과일 df만들기
fruits<-data.frame(가격=c(1000,2000,500),
판매수량=c(20,10,5),row.name=c("포도","사과","배"))
fruits
#과일 df만들기
fruits<-data.frame(가격=c(1000,2000,500),
판매수량=c(20,10,5),row.names=c("포도","사과","배"))
fruits
mean(fruits$가격)
mean(fruits$가격)
mean(fruits$판매수량량)
mean(fruits$판매수량)
#cafe.naver.com/ai4you
#Data의 내용들 중 xlsx 읽으려면
install.packages("readxl")
library(readxl)
read_excel("Data/excel_exam.xlsx")
df,-read_excel("Data/excel_exam.xlsx")
df<-read_excel("Data/excel_exam.xlsx")
df
mean(df$science)
df<-data.frame(df,row.names = c(2:21))
df
df2<-read_excel("Data/excel_exam_novar.xlsx")
df2
df2<-read_excel("Data/excel_exam_novar.xlsx",col_names = FALSE) #f1누르면 도움말 / false주면 default로 줌
df2
df3<-read_excel("Data/excel_exam_sheet.xlsx",col_names = FALSE) #f1누르면 도움말 / false주면 default로 줌
df2
df3
df3<-read_excel("Data/excel_exam_sheet.xlsx",col_names = FALSE) #f1누르면 도움말 / false주면 default로 줌
df3
df2<-read_excel("Data/excel_exam_novar.xlsx",col_names = FALSE) #f1누르면 도움말 / false주면 default로 줌
df2
df3<-read_excel("Data/excel_exam_sheet.xlsx",col_names = FALSE) #f1누르면 도움말 / false주면 default로 줌
df3
df3<-read_excel("Data/excel_exam_sheet.xlsx",col_names = FALSE,sheet=3) #3번째 sheet에서 가져와야 함
df3
df3<-read_excel("Data/excel_exam_sheet.xlsx"sheet=3) #3번째 sheet에서 가져와야 함
df3<-read_excel("Data/excel_exam_sheet.xlsx",sheet=3) #3번째 sheet에서 가져와야 함
df3
df4<-read.csv("Data/csv_exam.csv") #table형식의 file을 dataframe으로 바꿔주는 것 sep 옵션으로 구분자 선택 가능
df4
str(df4)
df5<-data.frame(a=c(1,2,3),
b=c(1,2,3),
c=c(1,2,3))
df5
df5<-data.frame(a=c(1,2,3),
b=c(1,2,3),
c=c(1,2,3),
row.names = c("강낭콩","완두콩","팥"))
df5
write.csv(df5,file = "mydf.csv")
#파일 용량 작고 빠르게
save(df5,file = "mydf_s.rda")
load("mydf_s.rda")
rm(df5)
df5<-load("mydf_s.rda")
df5
rm(df5)
df5
load("mydf_s.rda")
df5
rm(df5)
df5
load("mydf_s.rda")
df2
df7
load("mydf_s.rda")
df7
rm(df5)
df5
load("mydf_s.rda")
df5
rm(df5)
df5<-load("mydf_s.rda")
df5
exam<-read.csv("Data/csv_exam.csv")
exam
head(exam)
tail(exam)
head(exam,10)
view(exam)
View(exam)
dim(exam)
summary(exam)
qplot(exam)
qplot(exam$math)
qplot(exam,geom = "boxplot")
qplot(exam$math,geom = "boxplot")
qplot(data="exam",x = "math", geom = "boxplot")
exam
qplot(data="exam",x = "math", geom = "boxplot")
qplot(data=mpg,x = "math", geom = "boxplot")
qplot(data=exam,x = "math", geom = "boxplot")
#EDA : 탐색적 분석 방법 : 데이터를 보면서 분석해나간다
qplot(data = mpg,x = drv,y = hwy,geom = "line")
qplot(data = mpg,x = drv,y = hwy,geom = "boxplot")
class(mpg)
head(mpg)
qplot(data="exam",x = "math",y = "english", geom = "boxplot")
mpg
qplot(data="exam",x = "math",y = "english", geom = "boxplot")
qplot(data="exam",x = "math", geom = "boxplot");
as.data.frame(mpg)
str(mpg)
mpg<-as.data.frame(mpg)
str(mpg)
mpg
source('C:/Users/user/Desktop/lecture_dir/rwork/20190514.R', echo=TRUE)
df5
exam<-read.csv("Data/csv_exam.csv")
exam
str(exam)
summary(exam) #기술통계 보여주는 명령어
View(mpg)
dim(mpg)
str(mpg)
summary(mpg)
#데이터 변경
data.frame(var1=c(1,2,1),
var2=c(1,2,1))
#데이터 변경
df<-data.frame(var1=c(1,2,1),
var2=c(1,2,1))
df
df_new<-df
#데이터 변경
df<-data.frame(var1=c(1,2,1),
var2=c(1,2,3))
df
df_new<-df #데이터프레임 복사
library(plyr)
rename(df_new, v2=var2)
rename(df_new, replace=var2)
rename(df_new, replace=c("var2"="v2"))
install.packages("dplyr")
library("dplyr")
df_new<-rename(df_new,v1=var1)
df_new
df_new<-rename(df_new,v1=var1,v2=var2) #이름변경 var1->v1으로
df_new
df_new<-rename(df_new,v2=var2)
df_new
mydf<-data.frame(eng=c(70,80,90),
mat=c(50,60,70))
mydf$sum<-mydf$eng+mydf$mat
mydf$mymean<-mydf$sum/2
mydf
mpg
mpg$tot<-(mpg$cty+mpg$hwy)/2
mpg
mpg$tot
mean(mpg$tot)
summary(mpg$tot)
#히스토그램
hist(mpg$tot)
boxplot(mpg$tot)
boxplot(mpg)
#히스토그램
hist(mpg$tot)
#삼항연산
#평균연비(tot)가 23이상이면->gr_h, 미만이면 gr_l라고 쓰고싶음
mpg$yesOrNo<-ifelse(mpg$tot>=23,"gr_h","gr_l")
mpg
mpg<-rename(mpg,yesOrNo=test)
mpg<-rename(mpg,test=yesOrNo)
mpg
#table 함수
table(mpg$test) #빈도표
#qplot이용 그래프 시각화
qplot(mpg$test)
mpg$grade<-ifelse(mpg$tot>=28,"A",
ifelse(mpg$tot>=20),"B","C")
mpg$grade<-ifelse(mpg$tot>=28,"A",
ifelse(mpg$tot>=20,"B","C"))
mpg
table(mpg$grade)
qplot(mpg$grade)
exam<-read.csv("csv_exam.csv")
exam<-read.csv("Data/csv_exam.csv")
exam
#3반만 출력하고 싶다
#filter기능 : 원하는 자료만 추출
#ctrl+shift+m : filter(pipe) 기호 : 앞에 것 중에서 걸러내라
exam %>% filter(class=3)
#3반만 출력하고 싶다
#filter기능 : 원하는 자료만 추출
#ctrl+shift+m : filter(pipe) 기호 : 앞에 것 중에서 걸러내라
exam %>% filter(class==3)
#exam에 있는 것 중에서 class가 3인것만 걸러내라~
exam %>% filter(class!=3)
#3반이 아니면서 sci 50점 이상
exam %>% filter(class!=3 & sciencs>=50)
#3반이 아니면서 sci 50점 이상
exam %>% filter(class!=3 & science>=50)
#math가 70점 이상|eng가 90점 이상
exam %>% filter(math>=70|eng>=90)
#math가 70점 이상|eng가 90점 이상
exam %>% filter(math>=70|english>=90)
#class 1,4,5만 추출하고 싶음
exam %>% filter(class %in% c(1,4,5))
class3<-exam %>% filter(class==3)
class3
mean(class3$english)
mpg3<-mpg %>% filter(displ>=3)
mpg5<-mpg %>% filter(displ>=5)
mpg3<-mpg %>% filter(displ<=3)
mpg5<-mpg %>% filter(displ>=5)
hwy3<-mean(mpg3$hwy)
hwy5<-mean(mpg5$hwy)
hwy3
hwy5
str(mpg)
mpg
hist(mpg$manufacturer)
qplot(mpg$manufacturer)
talbe(mpg$manufacturer)
table(mpg$manufacturer)
#volkswagen과 audi 중 cty가 평균적으로 어디가 높은지
vcty<-mpg %>% filter(manufacturer=="volkswagen")
acty<-mpg %>% filter(manufacturer=="audi")
vcty
vcty_avg<-mean(vcty$cty)
acty_avg<-mean(acty$cty)
vcty_avg
acty_avg
#volkswagen과 audi 중 cty가 평균적으로 어디가 높은지
vmpg<-mpg %>% filter(manufacturer=="volkswagen")
ampg<-mpg %>% filter(manufacturer=="audi")
vcty_avg<-mean(vmpg$cty)
acty_avg<-mean(ampg$cty)
vcty_avg
acty_avg
mpg$manufacturer
table(mpg$manufacturer)
#현대, 쉐보레, 닛산 => 데이터 추출
#cty의 전체 평균 출력
hcnmpg<-mpg %>% filter(manufacturer %in% c("hyunda","chevrolet","nissan"))
avg1<-mean(hcnmpg$cty)
avg1
hcnmpg<-mpg %>% filter(manufacturer %in% c("hyundai","chevrolet","nissan"))
avg1<-mean(hcnmpg$cty)
avg1
hcnmpg
hcnmpg$cty
#컬럼 추출 : select
exam %>% select(science)
exam %>% select(science,math,class)
exam %>% select(-science,-math)
exam %>% select(-science,-math,-id)
#3반 추출 -> math 추출
exam %>% filter(class==3) %>% select(math)
#3반 추출 -> math 추출
exam %>% filter(class==3) %>% select(math,class)
#3반 추출 -> math 추출
#보통 이런식으로 가독성 좋게 써줌줌
exam %>%
filter(class==3) %>%
select(math,class)
#3반 추출 -> math 추출
#보통 이런식으로 가독성 좋게 써줌
exam %>%
filter(class==3) %>%
select(math,class) %>%
head
#3반 추출 -> math 추출
#보통 이런식으로 가독성 좋게 써줌
exam %>%
filter(class==3) %>%
select(math,class) %>%
head(2)
exam %>% select(math)
exam %>% arrange(math)
#내림차순
exam %>% arrange(desc(math))
exam %>% arrange(math, science)
exam %>% arrange(class,math)
nmpg<-mpg %>% select(class,cty)
nmpg
nmpg %>% head
#2
suv_nmpg<-nmpg %>% filter(class=="suv")
#2
suv_nmpg<-nmpg %>% filter(class=="suv") %>% select(cty)
suv_nmpg
mean(suv_nmpg)
str(suv_nmpg)
str(suv_nmpg$cty)
mean(suv_nmpg)
#2
suv_nmpg<-nmpg %>% filter(class=="suv")
str(suv_nmpg$cty)
mean(suv_nmpg$cty)
mean(compact_nmpg$cty)
compact_nmpg<-nmpg %>% filter(class=="compact")
mean(compact_nmpg$cty)
#3
audi_car<-mpg %>% filter(manufacturer=="audi") %>% arrange(desc(hwy)
#3
audi_car<-mpg %>% filter(manufacturer=="audi") %>% arrange(desc(hwy))
#3
audi_car<-mpg %>% filter(manufacturer=="audi") %>% arrange(desc(hwy))
#3
audi_car<-mpg %>% filter(manufacturer=="audi") %>% arrange(desc(hwy)) %>% head(5)
audi_car
#4 : midwest
midwest
str(midwest)
table(midwet)
table(midwest)
n_midwest<-as.data.frame(midwest)
n_midwest
str(midwest)
#5
library(dplyr)
n_midwest<-rename(n_midwest,poptotal=total)
n_midwest<-rename(n_midwest,"poptotal"="total")
n_midwest<-rename(n_midwest,"popasian"="asian")
n_midwest<-rename(n_midwest,"asian"="popasian")
n_midwest<-rename(n_midwest,"total"="poptotal")
n_midwest
#6
n_midwest$totalPopPerAsian<-(n_midwest$asian/n_midwest$total)*100
hist(n_midwest$totalPopPerAsian)
n_midwest$totalPopPerAsian
#6
n_midwest$AsianPerTotal<-(n_midwest$asian/n_midwest$total)*100
hist(n_midwest$AsianPerTotal)
n_midwest$AsianPerTotal
#7
mean_APT<-mean(n_midwest$AsianPerTotal)
mean_a
mean_APT
n_midwest$asianCheck<-ifelse(n_midwest$AsianPerTotal>mean_APT,"large","small")
n_midwest
#8
table(n_midwest$asianCheck)
qplot
qplot(n_midwest$asianCheck)
str(mpg) #구조를 확인하는 함수
#EDA : 탐색적 분석 방법 : 데이터를 보면서 분석해나간다
qplot(data = mpg,x = drv,y = hwy,geom = "line")
qplot(data = mpg,x = drv,y = hwy,geom = "boxplot")
str(midwest)
qplot(data = n_midwest,x = popblack,y = popother)
qplot(data = n_midwest,x = popblack,y = popother,geom = "hist")
qplot(data = n_midwest,x = popblack,y = popother,geom = "list")
qplot(data = n_midwest,x = popblack,y = popother,geom = "boxplot")
dim(mpg)
summary(mpg$tot) #숫자로 보긴 조금 힘들구만
hist(n_midwest$percollege)
qplot(data = n_midwest,x = category,y = popother,geom = "boxplot")
head(n_midwest)
qplot(data = n_midwest,x = county,y = popother,geom = "boxplot")
qplot(data = n_midwest,x = county,y =asian,geom = "boxplot")
qplot(data = n_midwest,x = county,y =asian,geom = "boxplot",ylim = "40000")
qplot(data = n_midwest,x = county,y =asian,geom = "boxplot",ylim = 40000)
head(n_midwest)
qplot(data = n_midwest,x = state,y =popwhite,geom = "boxplot",ylim = 40000)
qplot(data = n_midwest,x = state,y =popwhite,geom = "boxplot")
n_midwest %>% arrange(state)
n_midwest %>% arrange(state) %>% select(state)
n_midwest %>% arrange(popwhite) %>% select(popwhite)
n_midwest %>% arrange(desc(popwhite)) %>% select(popwhite)
midwest %>% head
qplot(data = n_midwest,x = state,y =total,geom = "boxplot")
qplot(data = n_midwest,x = state,y = area,geom = "boxplot")
library(dplyr)
library(readxl)
gender_submission<-read.csv("Data/titanic/gender_submission.csv")
gender_submission
gender_submission %>% head()
qplot(n_midwest$asianCheck)
test<-read.csv("Data/titanic/test.csv")
train<-read.csv("Data/titanic/train.csv")
head(train)
head(test)
str(test)
str(train)
view(test)
View(test)
View(train)
qplot(data=train,x=Survived,y=Fare)
qplot(data=train,x=Survived,y=Fare,geom = "hist")
qplot(data=train,x=Survived,y=Fare,geom = "histogram")
qplot(data=train,x=Survived,y=Fare,geom = "boxplot")
qplot(data=train,x=Survived,y=Fare)
qplot(data=train,x=Survived,y=Fare,color=SibSp)
qplot(data=train,x=Survived,y=Cabin,color=SibSp)
qplot(data=train,x=Survived,y=PassengerId,color=SibSp)
qplot(data=train,x=Pclass,y=PassengerId,color=SibSp)
qplot(data=train,x=Age,y=PassengerId,color=SibSp)
qplot(data=train,x=Age,y=PassengerId,color=Survived)
