midwest$kidsPerAdult
midwest %>%
mutate(kidsPerAdult=1-(popadults/poptotal))
midwest$kidsPerAdult
midwest$popadults
midwest$poptotal
midwest %>%
mutate(kidsPerAdult=(1-(popadults/poptotal))*100)
#Q2
#1
str(midwest)
exam %>%
mutate(tot=math+english+science,
avg=tot/3) %>%
head
exam
midwest %>%
mutate(kidsPerAdult=(1-(popadults/poptotal))*100)
midwest$kidsPerAdult
df1<-midwest %>%
mutate(kidsPerAdult=(1-(popadults/poptotal))*100)
midwest$kidsPerAdult<-df1$kidsPerAdult
midwest$kidsPerAdult
#Q2
#1
str(midwest)
#2
midwest %>%
group_by(county) %>%
arrange(desc(kidsPerAdult)) %>%
head(5)
#Q2
#1
midwest
table(midwest$county)
#3
df1<-midwest %>%
mutate(kidRank=ifelse(kidsPerAdult>=40,"large",
ifelse(kidsPerAdult>=30,"middle","small")))
midwest$kidRank<-df1$kidRank
table(midwest$kidRank)
#4
df1<-midwest %>%
mutate(asianPerTotal=(popasian/poptotal)*100)
midwest$asianPerTotal<-df1$asianPerTotal
midwest %>%
arrange(asianPerTotal) %>%
summarize(state=state,county=county,asianPerTotal=asianPerTotal) %>%
tail(10)
midwest %>%
arrange(asianPerTotal) %>%
tail(10)
midwest %>%
select(state,county,asianPerTotal) %>%
arrange(asianPerTotal) %>%
tail(10)
#Q3
mpg<-as.data.frame(ggplot2::mpg)
mpg
mpg[c(65,124,131,153,212),"hwy"]<-NA
#1
is.na(mpg$drv)
#1
table(is.na(mpg$drv))
#1
table(is.na(mpg$drv))
table(is.na(mpg$hwy))
source('C:/Users/user/Desktop/lecture_dir/rwork/20190515_강태형.R', echo=TRUE)
#2
str(mpg)
mpg %>%
filter(!is.na(hwy)) %>%
group_by(drv) %>%
summarize(meanHwy=mean(hwy))
#Q4
mpg<-as.data.frame(ggplot::mpg)
#Q4
mpg<-as.data.frame(ggplot2::mpg)
mpg[c(10,14,58,93),"drv"]
mpg[c(10,14,58,93),"drv"] <- "k"
mpg[c(29,43,129,203),"cty"]<-c(3,4,39,42)
#1
table(mpg$drv)
df1<-mpg %>%
filter(drv %in% c(4,"f","r"))
table(df1$drv)
mpg$drv<-df1$drv
mpg<-df1
#2
boxplot(mpg$cty)
#2
boxplot(mpg$cty)$stats
mpg<-mpg %>%
filter(mpg$cty<=26&mpg$cty>=9)
#2
boxplot(mpg$cty)$stats
#3
str(mpg)
source('C:/Users/user/Desktop/lecture_dir/rwork/20190515_강태형.R', echo=TRUE)
mpg %>%
group_by(drv) %>%
summarize(meanCty=mean(cty))
#summarize dplyr패키지에서 summary 역할,
exam %>% summarize(meanMath=mean(math))
#반별 수학점수의 평균 및 요약통계치를 알고싶다!
#반별로 그룹을 만들어 줘야 함 : group_by
exam %>%
group_by(class) %>%
summarize(meanMath=mean(math),
medianMath=median(math),
sumMath=sum(math),
count=n(), #n() : 관측치의 숫자
sdMath=sd(math),
minMath=min(math),
maxMath=max(math))
#제조사별, 구동방식별 그룹화
mpg %>%
group_by(manufacturer,drv) %>%
summarize(meanCty=mean(cty),
count=n()) %>%
head(20)
mpg %>%
group_by(manufacturer,drv,class) %>%
summarize(meanCty=mean(cty),
count=n()) %>%
head(20)
#자동차 제조사별로 그룹화
mpg %>%
group_by(manufacturer) %>%
filter(class=="suv") %>%
summarize(meanHwy=mean(hwy),
meanCty=mean(cty),
cnt=n()) %>%
arrange(desc(meanCty))
library(dplyr)
library(readxl)
library(ggplot2)
gender_submission<-read.csv("Data/titanic/gender_submission.csv")
gender_submission %>% head()
test<-read.csv("Data/titanic/test.csv")
train<-read.csv("Data/titanic/train.csv")
head(train)
head(test)
qplot(data=train,x=Age,y=PassengerId,color=Survived)
str(test)
boxplot(test$Cabin)
boxplot(test$SibSp)
boxplot(test$Age)
boxplot(test$Age)
boxplot(test$Fare)
boxplot(test$Pclass)
str(test)
boxplot(test$Fare)
boxplot(test$Fare)$stats
install("RMySQL")
install.packages("RMySQL")
library(RMySQL)
library(RMySQL)
#database까지 연동
con<-dbConnect(MySQL(),user="root",password="1234",host="127.0.0.1",dbname="rprogramming")
dbListTables(con)
dbGetQuery(con, "select * from rtest2")
#Query에 알맞은 결과값을 dataframe 자료구조로 가져옴
df<-dbGetQuery(con, "select * from rtest2")
df
dbGetQuery(con, "select name from rtest2")
dbGetQuery(con, "select * from rtest2 where score>=5")
dbGetQuery(con, "select * from rprogramming.rtest2 where score<=2")
dbGetQuery(con, "select DISTINCT name from rtest2 where score>=5")
dbGetQuery(con, "select DISTINCT name as N from rtest2 where score>=5")
dbGetQuery(con, "select DISTINCT name=N from rtest2 where score>=5")
dbGetQuery(con, "select DISTINCT N=name from rtest2 where score>=5")
dbGetQuery(con, "select DISTINCT name N from rtest2 where score>=5")
install.packages("mlbench")
library(mlbench)
data(Ozone)
head(Ozone)
str(Ozone)
plot(Ozone$V8, Ozone$v9)
plot(Ozone$V8, Ozone$v9)
plot(Ozone$V8, Ozone$v9)
plot(Ozone$v8, Ozone$v9)
plot(Ozone$V8, Ozone$V9)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2")
help(par)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="+",cex=13)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="+",cex=2)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="-",cex=2)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="*",cex=2)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="a",cex=2)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="ㅃ",cex=0.1)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="ㅃ",cex=0.8)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="ㅃ",cex=1)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="앙앙",cex=1)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="점",cex=2)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="*",cex=2)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="*",cex=2, col=R)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="*",cex=2, col="R")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="*",cex=2, col="#235232")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="*",cex=2, col="#235200")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="*",cex=2, col="#23ff00")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="*",cex=2, col="#23aa00")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="*",cex=2, col="#ccaa00")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",main="Ozone",pch="*",cex=2, col="#ccaa99")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",
main="Ozone",pch="*",cex=2, col="#ccaa99",
col.axis="#0000ff")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",
main="Ozone",pch="*",cex=2, col="#ccaa99",
col.axis="#0000ff",col.lab="#00ff00")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",
main="Ozone",pch="*",cex=2, col="#ccaa99",
col.axis="#0000ff",col.lab="#00ff00")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",
main="Ozone",pch="*",cex=2, col="#ccaa99",
col.axis="#0000ff",col.lab="#00ff00")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",
main="Ozone",pch="*",cex=2, col="#ccaa99",
col.axis="#0000ff",col.lab="#00ff00", xlim="100",
ylim="130")
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",
main="Ozone",pch="*",cex=2, col="#ccaa99",
col.axis="#0000ff",col.lab="#00ff00", xlim=100,
ylim=130)
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",
main="Ozone",pch="*",cex=2, col="#ccaa99",
col.axis="#0000ff",col.lab="#00ff00", xlim=c(0,100),
ylim(0,130))
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",
main="Ozone",pch="*",cex=2, col="#ccaa99",
col.axis="#0000ff",col.lab="#00ff00", xlim=c(0,100),
ylim=c(0,130))
xrange<-c(min(Ozone$V8,na.rm = T), max(Ozone$V8,na.rm = T))
yrange<-c(min(Ozone$V9,na.rm = T), max(Ozone$V9,na.rm = T))
plot(Ozone$V8, Ozone$V9,xlab="Temp1",ylab = "Temp2",
main="Ozone",pch="*",cex=2, col="#ccaa99",
col.axis="#0000ff",col.lab="#00ff00",
xlim=xrange, ylim=yrange)
car
cars
plot(cars)
plot(cars$speed,cars$dist)
plot(cars)
boxplot(cars$dist)
boxplot(cars$speed)
plot(cars$speed,cars$dist)
boxplot(cars$dist)
help(par) #plot 사용하는 docs
plot(cars,type="l")
plot(cars,type="b")
plot(cars,type="o")
cars # 속도와 제동거리
tapply
tapply(cars$dise,speed,mean)
tapply(cars$dist,speed,mean)
tapply(cars$dist,cars$speed,mean)
cars %>% group_by(speed)
cars %>%
group_by(speed) %>%
summarize(distMean=mean(dist))
ds,-tapply(cars$dist,cars$speed,mean) #speed로 묶고, dist의 평균 구해주기
ds,-tapply(cars$dist,cars$speed,mean) #speed로 묶고, dist의 평균 구해주기
ds<-tapply(cars$dist,cars$speed,mean) #speed로 묶고, dist의 평균 구해주기
plot(ds)
plot(ds,xlab="speed",ylab = "dist")
plot(ds,xlab="speed",ylab = "dist",type = "o",
cex=0.5)
#dplyr library로도 할 수 있다
df1<-cars %>%
group_by(speed) %>%
summarize(distMean=mean(dist))
plot(x=df1$speed,y=df1$distMean)
plot(ds,xlab="speed",ylab = "dist",type = "o",
cex=0.5, lty="dashed")
plot(x=df1$speed,y=df1$distMean,xlab="speed",ylab = "dist",type = "o",
cex=0.5, lty="dashed")
plot(ds,xlab="speed",ylab = "dist",type = "o",
cex=0.5, lty="dashed")
plot(x=df1$speed,y=df1$distMean,xlab="speed",ylab = "dist",type = "o",
cex=0.5, lty="dashed")
plot(ds,xlab="speed",ylab = "dist",type = "o",
cex=0.5, lty="dashed")
plot(x=df1$speed,y=df1$distMean,xlab="speed",ylab = "dist",type = "o",
cex=0.5, lty="dashed")
plot(ds,xlab="speed",ylab = "dist",type = "o",
cex=0.5, lty="dashed")
ds
#figure(화면) 위에 graph를 여러개 띄워야 하는 경우도 많다!
par(mfrow=c(1,2))
plot(ds,xlab="speed",ylab = "dist",type = "o",
cex=0.5, lty="dashed")
plot(x=df1$speed,y=df1$distMean,xlab="speed",ylab = "dist",type = "o",
cex=0.5, lty="dashed")
#figure(화면) 위에 graph를 여러개 띄워야 하는 경우도 많다!
myPar<-par(mfrow=c(1,2))
par(mfrow=c(1,1))
plot(x=df1$speed,y=df1$distMean,xlab="speed",ylab = "dist",type = "o",
cex=0.5, lty="dashed")
myPar
plot(Ozone$v8, Ozone$v9)
plot(Ozone$V8, Ozone$V9)
myPar
plot(Ozone$V8, Ozone$V9)
plot(Ozone$V8, Ozone$V9,main="OZONE")
#figure(화면) 위에 graph를 여러개 띄워야 하는 경우도 많다!
myPar<-par(mfrow=c(1,2))
myPar
par(mfrow=c(1,2))
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9)
par(myPar)
par(mfrow=c(1,1))
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9,main = "OZONE2")
par(myPar)
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9,main = "OZONE2")
#figure(화면) 위에 graph를 여러개 띄워야 하는 경우도 많다!
myPar<-par(mfrow=c(1,2))
par(myPar)
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9,main = "OZONE2")
#figure(화면) 위에 graph를 여러개 띄워야 하는 경우도 많다!
par() # reset
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9,main = "OZONE2")
par(myPar)
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9,main = "OZONE2")
par(mfrow=c(1,1))
myPar<-par(mfrow=c(1,2))
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9,main = "OZONE2")
#figure(화면) 위에 graph를 여러개 띄워야 하는 경우도 많다!
par() # reset
#figure(화면) 위에 graph를 여러개 띄워야 하는 경우도 많다!
par() # reset
myPar<-par(mfrow=c(2,1))
par(myPar)
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9,main = "OZONE2")
par(myPar)
plot(Ozone$V8, Ozone$V9,main = "OZONE2")
plot(Ozone$V8, Ozone$V9,main="OZONE")
#figure(화면) 위에 graph를 여러개 띄워야 하는 경우도 많다!
par() # reset
myPar<-par(mfrow=c(2,1))
par(myPar)
plot(Ozone$V8, Ozone$V9,main="OZONE")
plot(Ozone$V8, Ozone$V9,main = "OZONE2")
#figure(화면) 위에 graph를 여러개 띄워야 하는 경우도 많다!
par() # reset
plot(Ozone$V8, Ozone$V9,main = "OZONE2")
#figure(화면) 위에 graph를 여러개 띄워야 하는 경우도 많다!
par() # reset
plot(Ozone$V8, Ozone$V9,main = "OZONE2")
library(ggplot2)
#1.배경설정
mpg
#1.배경설정
str(mpg)
mpg<-as.data.frame(ggplot2::mpg)
ggplot(data = mpg, aes(x=displ,y=hwy))
ggplot(data = mpg, aes(x=displ,y=hwy))+geom_point()
ggplot(data = mpg, aes(x=displ,y=hwy))+geom_point()+geom_area()
ggplot(data = mpg, aes(x=displ,y=hwy))+geom_point()+xlim(0,10)
ggplot(data = mpg, aes(x=displ,y=hwy))+geom_point()+xlim(0,10)+ylim(0,60)
ggplot(data = mpg, aes(x=displ,y=hwy))+geom_point()+xlim(0,10)+ylim(0,50)
ggplot(data = mpg, aes(x=displ,y=hwy))+geom_point()+xlim(0,50)+ylim(0,50)
1
ggplot(data = mpg, aes(x=displ,y=hwy))+geom_point()+xlim(0,10)+ylim(0,50)
#ggplot vs qplot
#ggplot():세부조작
#qplot():간단 데이터 확인
qplot(mpg)
#ggplot vs qplot
#ggplot():세부조작
#qplot():간단 데이터 확인
qplot(data=mpg,x=displ,y=hwy)
qplot(data=mpg,x=displ,y=hwy)
qplot(data=mpg,x=displ,y=hwy,type="hist")
qplot(data=mpg,x=displ)
#바 그래프 출력
df<-mpg %>%
group_by(drv) %>%
summarize(meanHwy=mean(hwy))
df
#tibble은 df의 최신버전 : 거의 유사
ggplot(data=df,aex(x=drv,y=meanHwy))
#tibble은 df의 최신버전 : 거의 유사
ggplot(data=df,aes(x=drv,y=meanHwy))
#tibble은 df의 최신버전 : 거의 유사
ggplot(data=df,aes(x=drv,y=meanHwy)) + geom_bar()
#tibble은 df의 최신버전 : 거의 유사
ggplot(data=df,aes(x=drv,y=meanHwy)) + geom_col()
ggplot(data=df,aes(x=reorder(drv),y=meanHwy)) + geom_col()
ggplot(data=df,aes(x=reorder(drv,meanHwy),y=meanHwy)) + geom_col()
#reorder : 앞에거를 뒤의 크기 순으로 정렬해라
ggplot(data=df,aes(x=reorder(drv,-meanHwy),y=meanHwy)) + geom_col()
#빈도 바 그래프
ggplot(data=mpg, aes(x=drv)) + geom_bar()
ggplot(data=mpg, aes(x=cty)) + geom_bar()
economics
View(economics)
str(economics)
#시간의 흐름에 따른 사원의 실업률을 알아보자
ggplot(data=economics, aex(x=date,y=uemploy)) + geom_line()
#시간의 흐름에 따른 사원의 실업률을 알아보자
ggplot(data=economics, aes(x=date,y=uemploy)) + geom_line()
#시간의 흐름에 따른 사원의 실업률을 알아보자
ggplot(data=economics, aes(x=date,y=unemploy)) + geom_line()
data
#df병합!
#1. rbind
do.call(rbind,data)
n=10
for(c in 1:n){
data[[c]]<-data.frame(Index=c,
myChar=sample(letters,1),
z=runif(1))
}
data
data=list()
n=10
for(c in 1:n){
data[[c]]<-data.frame(Index=c,
myChar=sample(letters,1),
z=runif(1))
}
data
#df병합!
#1. rbind
do.call(rbind,data)
data
#which구문 : 조건에 맞는 index를 return 해주는 function
which(letters=="a")
which(iris$Species=="setosa")
which.min(iris$Sepal.Length) #speal.length가 최솟값인 index return
which.max(iris$Sepal.Length)
library(ggplot2)
library(dplyr)
df<-read.csv("Data/multicampus.csv")
df
str(df)
ggplot(data=df,aes(x=Date,y=c(high,low)))
ggplot(data=df,aes(x=Date,y=high))
ggplot(data=df,aes(x=Date,y=c(High,Low)))
ggplot(data=df,aes(x=c(Date,Date),y=c(High,Low)))
ggplot(data=df,aes(x=Date,y=High)) + geom_line()
df<-read.csv("Data/multicampus.csv", stringAsFactors=F)
df<-read.csv("Data/multicampus.csv", stringAsFactor=F)
df
str(economics)
str(iris)
df<-read.csv("Data/multicampus.csv",stringsAsFactors = F)
df
str(df)
ggplot(data=df,aes(x=Date,y=High)) + geom_line()
df$Date<-as.Date(df$Date)
ggplot(data=df,aes(x=Date,y=High)) + geom_line()
str(df)
par(mfrow=c(2,2))
ggplot(data=df,aes(x=Date,y=High)) + geom_line()
ggplot(data=df,aes(x=Date,y=High)) + geom_line() + ylim(0,100000)
par()
par(mfrow=c(2,2))
ggplot(data=df,aes(x=Date,y=High)) + geom_line() + ylim(0,100000)
myPar<-par(mfrow=c(2,2))
par(myPar)
myPar<-par(mfrow=c(2,2))
par(myPar)
ggplot(data=df,aes(x=Date,y=High)) + geom_line() + ylim(0,100000)
str(df)
ggplot(data=df,aes(x=Date,y=High)) + geom_line() + ylim(0,100000)
ggplot(data=df,aes(x=Date,y=Open)) + geom_line() + ylim(0,100000)
ggplot(data=df,aes(x=Date,y=Low)) + geom_line() + ylim(0,100000)
ggplot(data=df,aes(x=Date,y=Close)) + geom_line() + ylim(0,100000)
myPar<-par(mfrow=c(2,2))
par(myPar)
ggplot(data=df,aes(x=Date,y=High)) + geom_line() + ylim(0,100000)
ggplot(data=df,aes(x=Date,y=Open)) + geom_line() + ylim(0,100000)
par()
myPar<-par(mfrow=c(2,2))
par(myPar)
ggplot(data=df,aes(x=Date,y=High)) + geom_line() + ylim(0,100000)
ggplot(data=df,aes(x=Date,y=Open)) + geom_line() + ylim(0,100000)
ggplot(data=df,aes(x=Date,y=Low)) + geom_line() + ylim(0,100000)
ggplot(data=df,aes(x=Date,y=Close)) + geom_line() + ylim(0,100000)
lapply(x,mean)
x<-list(a=1:3,b=4:6)
x
str(x$a)
lapply(x,mean)
source('C:/Users/user/Desktop/lecture_dir/rwork/20190516.R', echo=TRUE)
summaryBy(Sepal.Length+Sepal.Width~Species,iris) #mean값을 summary해주는 구만
iris[order(iris$Sepal.Length,iris$Petal.Length),] #order안에 여러개 쓰면 기준 순차적용
NROW(iris) #row 갯수
NCOL(iris)
iris[sample(NROW(iris),NROW(iris)),] #iris index를 뒤죽박죽 섞어서 넣어줌
split(iris,iris$Species) #종별로 나눈 데이터
sampleBy(~Species,frac = 0.1,data=iris) #조건주고 데이터 추출 : ~뒤에거 기준 / frac ; 추출%
iris, Species=="setosa"
subset(iris, Species=="setosa") #걸러내기 부분집합
subset(iris, Species!="setosa" & Sepal.Length>5.0) # 여러 조건 한꺼번에 줄 수도 있음
x<-data.frame(name=c("a","b","c"),math=c(1,2,3))
y<-data.frame(name=c("c","b","d"),eng=c(6,4,9))
cbind(x,y)
merge(x,y)
